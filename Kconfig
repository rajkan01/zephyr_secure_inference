# Private config options for TF-M secure provisioning application

# Copyright (c) 2021 Linaro
# SPDX-License-Identifier: Apache-2.0

mainmenu "TF-M secure inference sample application"

menu "Application configuration"

module = PSA
module-str = psa
source "subsys/logging/Kconfig.template.log_config"

endmenu

config SECURE_INFER_SHELL_CMD_SUPPORT
	bool "Enable custom shell commands for secure inference"
	depends on SHELL
	help
	  Enabling this option will make secure inference shell commands available.

config SECURE_INFER_HUK_DERIV_LABEL_EXTRA
	string "Supplementary label value to append for key derivation"
	help
	  This string will be appended to the label used when deriving keys from
	  the HUK in the secure HUK service. It is used exclusively by TF-M, but
	  is exposed here for convenience purposes so that the Zephyr build
	  system can pass it through to TF-M.

config AZURE_SHELL_CMD_SUPPORT
	bool "Enable custom shell commands for Azure"
	depends on SHELL
	help
	  Enabling this option will make shell commands available for
	  controlling communication with the Azure IoT Hub service.

config AZURE_STACK_SIZE
	int "Size of stack for main Azure thread"
	default 4096
	help
	  Size of the stack to be used by the Azure worker thread.  Note that
	  some of the work is done in this thread, and some is done in a worker
	  thread.

config TLS_PSA_KEY_WORKAROUND
	bool "Work around the early support for the TLS code using the PSA API"
	default y
	help
	  This is a temporary workaround until Mbed TLS TLS code can fully
	  work with PSA-based keys.  Instead of using a key on the secure
	  side, it uses the private key to derive a local key, which is
	  kept in RAM on the non-secure side.  This configuration is less
	  secure, and should not be used once Mbed TLS and Zephyr fully
	  support using a psa_key_id within the TLS stack.

source "Kconfig.zephyr"
