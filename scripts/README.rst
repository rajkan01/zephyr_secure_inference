COSE signature verification and get the inference value
#######################################################

Overview
********

This python script is used to verify the COSE SIGN1 signature in secure inference samples.

It is based upon: https://github.com/TimothyClaeys/pycose

Note:
This script will be extended in future to support COSE DECRYPT functionality.

Prerequisites
*************

1. Install python 3.7.x using ``sudo apt install python3 python3-pip`` command
2. Install pycose using the ``pip install cose`` command


Running the script
******************

   .. code-block:: console

      cose_verify.py [-h] [-a ACTION] [-p PAYLOAD] [-k PUBLICKEY]

Supported command line arguments
================================

``--action`` or ``-a``

1. COSE_SIGN1_VERIFY
2. COSE_DECRYPT_VERIFY

``--payload`` or ``-p``

Cose inference value encoded and signed payload in bytes format as an argument

``--publickey`` or ``-k``

The public key is in the form of 'FORMAT + X + Y' of 65bytes as an argument

Example
=======
   .. code-block:: console

      ./cose_verify.py -p 0xd2,0x84,0x43,0xa1,0x1,0x26,0xa0,0x4b,0xa1,0x3a,0x0,0x1,0x38,0x7f,0x44,0x1f,0x85,0xab,0x3f,0x58,0x40,0xb7,0x61,0x7c,0x38,0x29,0x4b,0xe,0x78,0xbf,0x92,0xb5,0x93,0x74,0x9c,0x6c,0x40,0x72,0x13,0x71,0xb0,0x6a,0x8a,0x2,0x49,0x4f,0xa4,0xad,0x7b,0x15,0x8,0x10,0x4a,0x37,0xc6,0x26,0x17,0x31,0xee,0xcf,0x60,0x89,0xa7,0xfc,0x46,0x71,0xfd,0x6e,0xe1,0x63,0xe5,0x13,0x33,0xcb,0x57,0x2f,0x7e,0x75,0x75,0x1a,0x25,0xc1,0xd2,0x75,0xd6 -k "0x4,0x18,0x4d,0xc2,0x5c,0xb,0x32,0x2f,0xfb,0xff,0xd,0xdf,0x9b,0x55,0x87,0x32,0xf3,0x53,0xf8,0x9a,0xf1,0x1b,0x1c,0x89,0x3a,0x8f,0xd5,0xb1,0x4d,0x9d,0x5a,0xed,0x8e,0x92,0xea,0xda,0x95,0x24,0xdf,0xd4,0xcc,0xcc,0x4b,0xe3,0x3c,0x1,0xc8,0x2c,0xb3,0xbf,0xb9,0x21,0x68,0x71,0x5a,0x5b,0xbc,0xc4,0xa,0x24,0x9d,0x74,0xad,0xc,0x68" -a COSE_SIGN1_VERIFY


Sample Output
=============

   .. code-block:: console

      Successfully verified the signature
      Payload:: a13a0001387f441f85ab3f
      Inference value from the payload:: (1.340000033378601,)
